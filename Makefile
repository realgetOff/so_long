# üé® **D√©finition des couleurs pour les messages echo**
RESET   = \033[m
CYAN    = \033[0;96m
YELLOW  = \033[0;93m
RED     = \033[1;91m
GREEN   = \033[1;92m
MAGENTA = \033[0;95m
BLUE    = \033[1;94m
WHITE	= \033[0;97m

# üõ† **Variables de compilation**
CC      = cc
NAME    = so_long

# üìÇ **Organisation des fichiers**
OBJ_DIR = obj
SRCS    = srcs/display.c \
          srcs/display_movement.c \
          srcs/parsing_map.c \
          srcs/parsing_map_checker.c \
          srcs/exit_data.c \
          srcs/handle_input.c \
          srcs/handle_input_aux.c \
          srcs/init_data.c \
          srcs/init_assets.c \
          srcs/so_long.c \
          srcs/init_map.c \
          srcs/so_long_utils.c \
          srcs/check_path.c

HEADER  = includes/so_long.h

# ‚öôÔ∏è **G√©n√©ration de la liste des fichiers objets**
OBJS    = $(patsubst srcs/%.c,$(OBJ_DIR)/%.o,$(SRCS))

# üìö **Librairies et Flags**
MLX     = MacroLibX/libmlx.so 
LIBFT   = libft/libft.a
CFLAGS  = -Wall -Wextra -Iincludes -g 
LDFLAGS = $(MLX) $(LIBFT) $(shell pkg-config --libs sdl2)

# üìå **R√®gle par d√©faut**
all: $(NAME)

# üì¶ **Compilation de la librairie MLX**
MacroLibX:
	@echo "[Git] $(BLUE)Clone de la : 'MacroLibX'$(WHITE)"
	@git clone https://github.com/seekrs/MacroLibX.git

$(MLX): MacroLibX
	@echo "[Makefile] $(CYAN)Compilation de MacroLibX...$(RESET)"
	@make -j -C MacroLibX > /dev/null 2>/dev/null
	@echo "[Makefile] $(GREEN)MacroLibX compil√© avec succ√®s !$(RESET)"

# üì¶ **Compilation de la librairie libft**
$(LIBFT):
	@echo "[Makefile] $(CYAN)Compilation de libft...$(RESET)"
	@make -C libft > /dev/null
	@echo "[Makefile] $(GREEN)libft compil√©e avec succ√®s !$(RESET)"
	@echo "[Makefile] $(GREEN)libft est pr√™te !$(RESET)"

# üîó **Cr√©ation de l'ex√©cutable**
$(NAME): $(MLX) $(OBJS) $(LIBFT)
	@echo "[Makefile] $(CYAN)Lien des objets pour cr√©er $(NAME)...$(RESET)"
	@$(CC) $(OBJS) $(LDFLAGS) -o $(NAME)
	@echo "[Makefile] $(GREEN)$(NAME) a √©t√© cr√©√© avec succ√®s !$(RESET)"

# üóÇ **Compilation des fichiers .c en .o (dans obj/)**
$(OBJ_DIR)/%.o: srcs/%.c $(HEADER)
	@mkdir -p $(dir $@)
	@$(CC) $(CFLAGS) -c $< -o $@
	@echo "[Makefile] $(YELLOW)Compilation de $< -> $@$(RESET)"

# üßπ **Nettoyage des fichiers objets**
clean:
	@rm -rf $(OBJ_DIR)
	@echo "[Makefile] $(RED)Suppression du dossier $(OBJ_DIR).$(RESET)"
	@echo "[Makefile] $(CYAN)Nettoyage de libft...$(RESET)"
	@make clean -C libft > /dev/null
	@echo "[Makefile] $(GREEN)libft nettoy√©e avec succ√®s !$(RESET)"
	@echo "[Makefile] $(CYAN)Nettoyage de MacroLibX...$(RESET)"
	@make clean -C MacroLibX > /dev/null
	@echo "[Makefile] $(GREEN)MacroLibX nettoy√© avec succ√®s !$(RESET)"

# üßπ **Nettoyage complet (objets, ex√©cutables, librairies)**
fclean: clean
	@rm -f $(NAME)
	@echo "[Makefile] $(RED)Suppression de l'ex√©cutable $(NAME).$(RESET)"
	@rm -f $(LIBFT)
	@echo "[Makefile] $(RED)Suppression de libft.a.$(RESET)"
	@rm -f MacroLibX/libmlx.so
	@echo "[Makefile] $(RED)Suppression de libmlx.so.$(RESET)"

# üîÑ **Recompilation compl√®te**
re: fclean all
	@echo "[Makefile] $(MAGENTA)Recompilation compl√®te termin√©e.$(RESET)"

# üöÄ **R√®gles pratiques pour ex√©cuter le programme**
run: all
	@echo "[Makefile] $(BLUE)Lancement de $(NAME)...$(RESET)"
	@./$(NAME) $(ARGS)

run2: all
	@echo "[Makefile] $(BLUE)Lancement de $(NAME) avec Valgrind...$(RESET)"
	@valgrind --show-leak-kinds=all --leak-check=full ./$(NAME) $(ARGS)

.PHONY: all clean fclean re run run2
